package employeebst;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class EmployeeBST {
	/** The tree root. */
	private Node root;
	private NameComparator nameCmp;

	public EmployeeBST(NameComparator nameComp) {
		root = null;
		nameCmp=nameComp;
	}
	
	public void insert(Employee x) {
		if (root == null) {
			root = new Node(x, null, null);
		}
		else {
			Node n = root;
			boolean inserted = false;
			while(!inserted){
				if(nameCmp.compare(x,n.element)<0) {
					//space found on the left
					if(n.left == null){
						n.left = new Node(x,null,null);
						inserted = true;
					}
					else {
						n = n.left;
					}
				}
				
				else if(nameCmp.compare(x,n.element)>=0){ 
					//space found on the right					
					if(n.right==null){
						n.right = new Node(x,null,null);
						inserted = true;
					}
					else {
						n = n.right;
					}
				}
				
			}

		}
	}
	
	private class Node {

		// Constructors
		Node(Employee theElement) {
			this(theElement, null, null);
		}

		Node(Employee element, Node left, Node right) {
			this.element = element;
			this.left = left;
			this.right = right;
		}
		private Employee element; // The data in the node
		private Node left; // Left child
		private Node right; // Right child
	}

}
